package com.sven.xinyao.ui;

import java.util.Timer;
import java.util.TimerTask;

import org.json.JSONObject;

import android.content.Context;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.Telephony.Mms.Part;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.sven.xinyao.modles.Comm;

public class RegView extends HttpSupportActivity {
	@ViewInject(R.id.title)
	private TextView title;

	@ViewInject(R.id.reback)
	private Button reback;

	@ViewInject(R.id.getnumber)
	private Button getnumber;

	@ViewInject(R.id.btnReg)
	private Button btnReg;

	@ViewInject(R.id.username)
	private EditText username;

	@ViewInject(R.id.msgnumber)
	private EditText msgnumber;

	@ViewInject(R.id.password)
	private EditText password;

	@ViewInject(R.id.repassword)
	private EditText repassword;

	private int scoends = 120;
	private final int RunCode = 1000;
	private String PhoneRequestCode = "获取验证码";
	private String PhoneRequestCode1 = "校验验证码";
	private String PhoneRequestCode2 = "注册成功";

	private Handler handler = null;
	private Context context;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.reg_view);
		context = this;
		ViewUtils.inject(this);
		initViews();
		setListener();
	}

	private void setListener() {
		msgnumber.addTextChangedListener(new TextWatcher() {
			@Override
			public void onTextChanged(CharSequence s, int start, int before,
					int count) {
			}

			@Override
			public void beforeTextChanged(CharSequence s, int start, int count,
					int after) {
			}

			@Override
			public void afterTextChanged(Editable s) {
				int wordSize = s.length();
				if (wordSize == 6) {
					RequestParams params = new RequestParams();
					params.addQueryStringParameter("token", s.toString().trim());
					params.addQueryStringParameter("phone", GetString(username));
					HttpRequest(Comm.ValidatePhoneCodePath, params, null,
							PhoneRequestCode1);
				}
			}
		});
	}

	private void initViews() {
		title.setText("注册");
		handler = new Handler(new Handler.Callback() {
			@Override
			public boolean handleMessage(Message msg) {
				Timer timer = new Timer();
				switch (msg.what) {
				case 1000:
					timer.schedule(new TimerTask() {
						@Override
						public void run() {
							handler.sendEmptyMessage(1001);
							if (scoends == 0) {
								handler.sendEmptyMessage(1002);
								this.cancel();
							}
						}
					}, 0, 1000);
					break;
				case 1001:
					getnumber.setText("重新获取验证码" + String.valueOf(scoends--)
							+ "s");
					break;
				case 1002:
					getnumber.setClickable(true);
					getnumber.setText("获取验证码");
					getnumber.setTextColor(Color.WHITE);
					if (timer != null) {
						timer.cancel();
						timer = null;
					}
					scoends = 120;
					break;
				default:
					break;
				}
				return false;
			}
		});
	}

	@OnClick({ R.id.btnBack, R.id.reback })
	@Override
	public void back(View v) {
		super.back(v);
	}

	@OnClick(R.id.btnReg)
	public void btnReg(View v) {
	}

	@OnClick(R.id.getnumber)
	public void getnumber(View v) {
		String phone = GetString(username);
		if (phone.equals("")) {
			return;
		}
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("phone", phone);
		HttpRequest(Comm.GetPhoneCodePath, params, null, PhoneRequestCode);
		getnumber.setClickable(false);
		getnumber.setTextColor(Color.GRAY);
		handler.sendEmptyMessage(RunCode);
	}

	@Override
	public void OnSuccess(JSONObject result, String httpResquestCode) {
		super.OnSuccess(result, httpResquestCode);
		try {
			if (httpResquestCode.equals(PhoneRequestCode)) {
				// 发送验证码成功
				ToastUtil(result.getString("result"));
			} else if (httpResquestCode.equals(PhoneRequestCode1)) {
				// 校验成功
				ToastUtil(result.getString("result"));
			} else if (httpResquestCode.equals(PhoneRequestCode1)) {
				// 注册成功
				ToastUtil(result.getString("result"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
